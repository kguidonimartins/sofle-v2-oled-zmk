 /*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&caps_word {
    continue-list = <DEL MINUS BSPC>;
};

#define QWERT_L 0
#define NUM_L   1
#define SYM_L   2
#define NAV_L   3
#define OUT_L   4
#define FUN_L   5

#define MY_COPY LC(INSERT)
#define MY_PASTE LS(INSERT)

#define CCA &kp LG(LC(A))
#define CCB &kp LG(LC(B))
#define CCC &kp LG(LC(C))
#define CCD &kp LG(LC(D))
#define CCE &kp LG(LC(E))
#define CCF &kp LG(LC(F))
#define CCG &kp LG(LC(G))
#define CCH &kp LG(LC(H))
#define CCI &kp LG(LC(I))
#define CCJ &kp LG(LC(J))
#define CCK &kp LG(LC(K))
#define CCL &kp LG(LC(L))
#define CCM &kp LG(LC(M))
#define CCN &kp LG(LC(N))
#define CCO &kp LG(LC(O))
#define CCP &kp LG(LC(P))
#define CCQ &kp LG(LC(Q))
#define CCR &kp LG(LC(R))
#define CCS &kp LG(LC(S))
#define CCT &kp LG(LC(T))
#define CCU &kp LG(LC(U))
#define CCV &kp LG(LC(V))
#define CCW &kp LG(LC(W))
#define CCX &kp LG(LC(X))
#define CCY &kp LG(LC(Y))
#define CCZ &kp LG(LC(Z))
#define CC_C &kp LG(LC(COMMA))
#define CC_D &kp LG(LC(DOT))
#define CC_L &kp LG(LC(SEMI))
#define CC_S &kp LG(LC(SLASH))

#define TAB_FW &kp LG(TAB)
#define TAB_BW &kp LG(LS(TAB))
#define TAB_CY &kp LG(TILDE)

/ {
    combos {
        compatible = "zmk,combos";

        #define COMBO(NAME, BINDINGS, KEYPOS, TIMEOUT) \
              combo_##NAME { \
                timeout-ms = <TIMEOUT>; \
                bindings = <BINDINGS>; \
                key-positions = <KEYPOS>; \
              };

        COMBO(minus, &kp MINUS, 31 34, 60)
        COMBO(underscore, &kp UNDER, 32 33, 60)
        COMBO(equal, &kp EQUAL, 30 35, 60)
        COMBO(plus, &kp PLUS, 20 29, 60)
    };

    macros {
        tmux_list: tmux_list {
            label = "tmux_list";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp N0>
                ;
        };
        macro_print_area_default: macro_print_area_default {
            label = "macro_print_area_default";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCMD>
                , <&macro_press &kp LSHFT>
                , <&macro_press &kp N2>
                , <&macro_release &kp LCMD>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp N2>
                ;
        };
        macro_print_area_clipboard: macro_print_area_clipboard {
            label = "macro_print_area_clipboard";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCMD>
                , <&macro_press &kp LSHFT>
                , <&macro_press &kp LCTRL>
                , <&macro_press &kp N4>
                , <&macro_release &kp LCMD>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LCTRL>
                , <&macro_release &kp N4>
                ;
        };
        macro_zoomin: macro_zoomin {
            label = "macro_zoomin";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCMD>
                , <&macro_press &kp PLUS>
                , <&macro_release &kp LCMD>
                , <&macro_release &kp PLUS>
                ;
        };
        macro_zoomout: macro_zoomout {
            label = "macro_zoomout";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCMD>
                , <&macro_press &kp MINUS>
                , <&macro_release &kp LCMD>
                , <&macro_release &kp MINUS>
                ;
        };
        macro_zoomreset: macro_zoomreset {
            label = "macro_zoomreset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCMD>
                , <&macro_press &kp N0>
                , <&macro_release &kp LCMD>
                , <&macro_release &kp N0>
                ;
        };
    };

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <185>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // QWERTY
        qwert_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | DEL  |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |  '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE    &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                           &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp DEL
&kp ESC      &kp Q         &kp W         &kp E         &kp R         &kp T                            &kp Y         &kp U         &kp I         &kp O         &kp P         &kp BSPC
&kp TAB      &bhm LGUI A   &bhm LALT S   &bhm LSHFT D  &bhm LCTRL F  &kp G                            &kp H         &bhm RCTRL J  &bhm RSHFT K  &bhm RALT L   &bhm RGUI SEMI &kp SQT
&kp LSHFT    &kp Z         &lt OUT_L X   &kp C         &kp V         &kp B         &kp C_MUTE &none   &kp N         &kp M         &kp COMMA     &kp DOT       &kp SLASH     &kp RSHFT
                           &kp LGUI      &kp LALT      &kp LCTRL     &bhm LSHFT ESC &bhm LCMD TAB    &lt NAV_L RET &lt SYM_L SPACE &lt NUM_L BSPC &lt FUN_L DEL &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        num_layer {
            bindings = <
&trans       &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                           &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &kp F11
&trans       &kp LBKT      &kp N7        &kp N8        &kp N9        &kp RBKT                         &kp STAR      &kp BSLH      &kp PIPE      &kp PRCNT     &none         &kp F12
&trans       &kp LPAR      &kp N4        &kp N5        &kp N6        &kp RPAR                         &kp PLUS      &bhm RCTRL UNDER &bhm RSHFT MINUS &bhm RALT EQUAL &bhm RGUI COLON &trans
&trans       &kp LBRC      &kp N1        &kp N2        &kp N3        &kp RBRC      &trans    &trans   &none         &none         &kp COMMA     &kp DOT       &kp SLASH     &trans
                           &trans        &trans        &trans        &kp F2        &kp N0             &trans        &trans        &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        sym_layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                            &trans        &trans        &trans        &trans        &trans        &trans
&trans       &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT                         &caps_word    &kp GRAVE     &kp TILDE     &kp CARET     &kp SEMI      &trans
&trans       &kp EQUAL     &kp PLUS      &kp MINUS     &kp UNDER     &kp DQT                           &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp SQT       &trans
&trans       &kp BSLH      &kp AMPS      &kp STAR      &kp PIPE      &kp CARET     &trans    &trans    &none         &none         &none         &none         &none         &trans
                           &trans        &trans        &trans        &kp GRAVE     &kp TILDE          &kp SQT       &trans        &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        nav_layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                            &trans        &trans        &trans        &trans        &trans        &trans
&trans       TAB_CY        &none         &none         &none         &none                             &caps_word    &kp GRAVE     &kp TILDE     &kp CARET     &kp SEMI      &trans
&trans       TAB_FW        &none         &none         &none         &none                             &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp DQT       &trans
&trans       TAB_BW        &none         &none         &none         &none         &trans    &trans    &tmux_list    &none         &none         &none         &kp SQT       &trans
                           &trans        &trans        &trans        &none         &none              &none         &none         &kp BSPC      &none         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        outro_layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                            &trans        &trans        &trans        &trans        &trans        &trans
&trans       &none         &none         &none         &none         &none                             CCY           &kp C_PREV    &kp C_PP      &kp C_NEXT    &macro_print_area_default &trans
&trans       &none         &none         &none         &none         &none                             &kp C_BRI_DN  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_UP  &macro_print_area_clipboard &trans
&trans       &none         &none         &none         &none         &none         &trans    &trans    &none         &kp C_MUTE    &macro_zoomin &macro_zoomout &macro_zoomreset &trans
                           &trans        &trans        &trans        &none         &none              &none         &none         &none         &none         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        fun_layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                            &trans        &trans        &trans        &trans        &trans        &trans
&trans       &kp LG(Q)     CCW           CCE           CCR           CCT                               CCY           CCU           CCI           CCO           CCP           &trans
&trans       CCA           CCS           CCD           CCF           CCG                               CCH           CCJ           CCK           CCL           CC_L          &trans
&trans       CCZ           CCX           CCC           CCV           CCB           &trans    &trans    CCN           CCM           CC_C          CC_D          CC_S          &trans
                           &trans        &trans        &trans        &none         &kp LG(LC(RET))    &none         &kp BSPC      &none         &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
